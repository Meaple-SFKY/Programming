$date
	Sun Jan 10 20:02:03 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module CPU_TB $end
$var reg 1 ! clk $end
$var reg 1 " rst $end
$scope module cpu $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 # stop $end
$var wire 1 $ pcWR $end
$var wire 1 % memWR $end
$var wire 3 & insShort [2:0] $end
$var wire 1 ' insMode $end
$var wire 4 ( insLong [3:0] $end
$var wire 16 ) inDataB [15:0] $end
$var wire 16 * inDataA [15:0] $end
$var wire 1 + ifBan $end
$var wire 8 , dataAddr [7:0] $end
$var wire 16 - aluData [15:0] $end
$var wire 4 . aluCode [3:0] $end
$var wire 1 / accWR $end
$var wire 8 0 Addr [7:0] $end
$scope module acc $end
$var wire 1 ! clk $end
$var wire 16 1 outData [15:0] $end
$var wire 16 2 inData [15:0] $end
$var wire 1 / accWR $end
$var reg 16 3 accData [15:0] $end
$upscope $end
$scope module alu $end
$var wire 16 4 inDataA [15:0] $end
$var wire 16 5 inDataB [15:0] $end
$var wire 4 6 aluCode [3:0] $end
$var reg 16 7 aluData [15:0] $end
$var reg 1 + ifBan $end
$upscope $end
$scope module cu $end
$var wire 3 8 insShort [2:0] $end
$var wire 1 ' insMode $end
$var wire 4 9 insLong [3:0] $end
$var reg 1 / accWR $end
$var reg 4 : aluCode [3:0] $end
$var reg 1 % memWR $end
$var reg 1 $ pcWR $end
$var reg 1 # stop $end
$upscope $end
$scope module insreg $end
$var wire 8 ; Addr [7:0] $end
$var reg 8 < dataAddr [7:0] $end
$var reg 12 = ins [11:0] $end
$var reg 4 > insLong [3:0] $end
$var reg 1 ' insMode $end
$var reg 3 ? insShort [2:0] $end
$upscope $end
$scope module memor $end
$var wire 1 ! clk $end
$var wire 8 @ dataAddr [7:0] $end
$var wire 16 A inData [15:0] $end
$var wire 1 % memWR $end
$var wire 16 B outData [15:0] $end
$upscope $end
$scope module pc $end
$var wire 1 ! clk $end
$var wire 1 + ifBan $end
$var wire 8 C jump [7:0] $end
$var wire 1 $ pcWR $end
$var wire 1 " rst $end
$var wire 1 # stop $end
$var reg 8 D Addr [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1 D
b10 C
b1111 B
b1111 A
b10 @
b0 ?
b1000 >
b100000000010 =
b10 <
b1 ;
b100 :
b1000 9
b0 8
b1111 7
b100 6
b1111 5
b0 4
b0 3
b1111 2
b0 1
b1 0
1/
b100 .
b1111 -
b10 ,
0+
b0 *
b1111 )
b1000 (
1'
b0 &
0%
0$
0#
0"
1!
$end
#1
b110 .
b110 6
b110 :
b110000 -
b110000 2
b110000 7
b110000 A
0'
b10 &
b10 8
b10 ?
b0 (
b0 9
b0 >
b110000 )
b110000 5
b110000 B
b1 ,
b1 <
b1 @
b1 C
b1000000001 =
b1111 *
b1111 1
b1111 4
b1111 3
b0 0
b0 ;
b0 D
0!
1"
#2
b100 .
b100 6
b100 :
b11110 -
b11110 2
b11110 7
b11110 A
1'
b0 &
b0 8
b0 ?
b1000 (
b1000 9
b1000 >
b1111 )
b1111 5
b1111 B
b10 ,
b10 <
b10 @
b10 C
b100000000010 =
b1 0
b1 ;
b1 D
0"
1!
#3
b101101 -
b101101 2
b101101 7
b101101 A
b11110 *
b11110 1
b11110 4
b11110 3
0!
#4
b11 .
b11 6
b11 :
b111100 -
b111100 2
b111100 7
b111100 A
b1110 (
b1110 9
b1110 >
b10 )
b10 5
b10 B
b0 ,
b0 <
b0 @
b0 C
b1110 =
b10 0
b10 ;
b10 D
1!
#5
b1111000 -
b1111000 2
b1111000 7
b1111000 A
b111100 *
b111100 1
b111100 4
b111100 3
0!
#6
b11110 -
b11110 2
b11110 7
b11110 A
b10 .
b10 6
b10 :
b1101 (
b1101 9
b1101 >
b1101 =
b11 0
b11 ;
b11 D
1!
#7
b1111 -
b1111 2
b1111 7
b1111 A
b11110 *
b11110 1
b11110 4
b11110 3
0!
#8
b1111111111100001 -
b1111111111100001 2
b1111111111100001 7
b1111111111100001 A
b1 .
b1 6
b1 :
0'
b100 &
b100 8
b100 ?
b0 (
b0 9
b0 >
b100 =
b100 0
b100 ;
b100 D
1!
#9
b11110 -
b11110 2
b11110 7
b11110 A
b1111111111100001 *
b1111111111100001 1
b1111111111100001 4
b1111111111100001 3
0!
#10
b0 -
b0 2
b0 7
b0 A
b0 .
b0 6
b0 :
b11 &
b11 8
b11 ?
b11 =
b101 0
b101 ;
b101 D
1!
#11
b0 *
b0 1
b0 4
b0 3
0!
#12
b1111 -
b1111 2
b1111 7
b1111 A
b110 .
b110 6
b110 :
b10 &
b10 8
b10 ?
b1111 )
b1111 5
b1111 B
b10 ,
b10 <
b10 @
b10 C
b1000000010 =
b110 0
b110 ;
b110 D
1!
#13
b1111 *
b1111 1
b1111 4
b1111 3
0!
#14
b11 .
b11 6
b11 :
b11110 -
b11110 2
b11110 7
b11110 A
1'
b0 &
b0 8
b0 ?
b1110 (
b1110 9
b1110 >
b10 )
b10 5
b10 B
b0 ,
b0 <
b0 @
b0 C
b1110 =
b111 0
b111 ;
b111 D
1!
#15
b111100 -
b111100 2
b111100 7
b111100 A
b11110 *
b11110 1
b11110 4
b11110 3
0!
#16
b1111111111111111 -
b1111111111111111 2
b1111111111111111 7
b1111111111111111 A
b100 .
b100 6
b100 :
b1000 (
b1000 9
b1000 >
b1111111111100001 )
b1111111111100001 5
b1111111111100001 B
b1011 ,
b1011 <
b1011 @
b1011 C
b100000001011 =
b1000 0
b1000 ;
b1000 D
1!
#17
b1111111111100000 -
b1111111111100000 2
b1111111111100000 7
b1111111111100000 A
b1111111111111111 *
b1111111111111111 1
b1111111111111111 4
b1111111111111111 3
0!
#18
0/
1%
b101 .
b101 6
b101 :
b1111111111111111 -
b1111111111111111 2
b1111111111111111 7
b1111111111111111 A
0'
b1 &
b1 8
b1 ?
b0 (
b0 9
b0 >
b1111 )
b1111 5
b1111 B
b10 ,
b10 <
b10 @
b10 C
b100000010 =
b1001 0
b1001 ;
b1001 D
1!
#19
b1111111111111111 )
b1111111111111111 5
b1111111111111111 B
0!
#20
1+
1$
0%
b111 .
b111 6
b111 :
1'
b0 &
b0 8
b0 ?
b1100 (
b1100 9
b1100 >
b110000000010 =
b1010 0
b1010 ;
b1010 D
1!
#21
b1111111111100000 -
b1111111111100000 2
b1111111111100000 7
b1111111111100000 A
0$
1/
b100 .
b100 6
b100 :
b1000 (
b1000 9
b1000 >
b1111111111100001 )
b1111111111100001 5
b1111111111100001 B
b1011 ,
b1011 <
b1011 @
b1011 C
b100000001011 =
b1011 0
b1011 ;
b1011 D
0!
#22
1$
0/
b1111 .
b1111 6
b1111 :
bx -
bx 2
bx 7
bx A
0'
b101 &
b101 8
b101 ?
b0 (
b0 9
b0 >
bx )
bx 5
bx B
b1110 ,
b1110 <
b1110 @
b1110 C
b10100001110 =
b1100 0
b1100 ;
b1100 D
1!
0+
#23
b1111111111100000 -
b1111111111100000 2
b1111111111100000 7
b1111111111100000 A
0$
1/
b100 .
b100 6
b100 :
1'
b0 &
b0 8
b0 ?
b1000 (
b1000 9
b1000 >
b1111111111100001 )
b1111111111100001 5
b1111111111100001 B
b1011 ,
b1011 <
b1011 @
b1011 C
b100000001011 =
b1101 0
b1101 ;
b1101 D
0!
#24
1#
b1111 .
b1111 6
b1111 :
b1 -
b1 2
b1 7
b1 A
b1111 (
b1111 9
b1111 >
b10 )
b10 5
b10 B
b0 ,
b0 <
b0 @
b0 C
b1111 =
b1110 0
b1110 ;
b1110 D
1!
#25
b1 *
b1 1
b1 4
b1 3
0!
#26
1!
#27
